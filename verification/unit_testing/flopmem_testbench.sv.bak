module flopmemTestBench #(parameter WIDTH = 32,
								  parameter outputFile = "flopmem_output.txt",
								  parameter inputFile = "flopmem_input.txt")
							    ();
					
logic clk, reset, en, pcsrc, regW, memW, memtoreg, PCSrcM, RegWriteM, MemWriteM, MemtoRegM;
logic [WIDTH-1:0] aluResult, Wdata, ALUResultM, WriteDataM;
logic [3:0] wa3e, WA3M;
logic [WIDTH-1:0] values[9:0];
integer f, i;

FLOPMEM #(WIDTH) flopmem (clk, reset, aluResult, Wdata, wa3e, pcsrc, regW, memW, memtoreg, PCSrcM, RegWriteM, MemWriteM, MemtoRegM, WA3M, ALUResultM, WriteDataM);

always #5 clk=~clk;

//Clock and reset release
initial begin
	$readmemb(inputFile, values);
	clk=0; reset=1; //Clock low at time zero
	@(posedge clk);
	@(posedge clk);
	reset=0;
end

initial begin

	f = $fopen(outputFile,"w");
	@(negedge reset); //Wait for reset to be released
   @(posedge clk);   //Wait for fisrt clock out of reset
	for (i = 0; i<5; i=i+1) begin
		d = values[i];
		en = values[i+5];
		@(posedge clk);
		$display("en = %b ; d = %d ; q = %d", en, d, q);
		$fwrite(f,"%b\n", q);
	end
	$fclose(f);
	
end
  
endmodule